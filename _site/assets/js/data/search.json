[
  
  {
    "title": "System Method",
    "url": "/posts/09-system-method/",
    "categories": "Smart Contract",
    "tags": "Smart Contract",
    "date": "2023-04-16 09:00:00 +0900",
    





    
    "snippet": "Getting StartedSASEUL has built-in smart contracts that is ready-to-run out of the box. In fact, even generating the genesis block of the main chain is done by one of the system smart contracts. Th...",
    "content": "Getting StartedSASEUL has built-in smart contracts that is ready-to-run out of the box. In fact, even generating the genesis block of the main chain is done by one of the system smart contracts. These system contracts and requests provides developers basic interfaces on SASEUL blockchain.System ContractsExecuting system contracts commit transactions based on the registered codes and end up with causing change of status.GenesisInitiate the main chain of the Saseul blockchain.The first node of the network which started as a genesis node can execute this contract to grant network manager privileges to itself.Request Parameters            Parameter      Requirements      Type      Maxlength      Description                  type      mandatory      String             “Genesis”              network_address      mandatory      String             44      RegisterRegister a smart contract code to Saseul blockchain.A network manager can execute this contract to make the given smart contarct code available on SASEUL blockchain.Request Parameters            Parameter      Requirements      Type      Maxlength      Description                  type      mandatory      String             “Register”              code      mandatory      String             65536      RevokeRevoke network manager privileges.A network manager can execute this contract to remove its network manager privileges.Request Parameters            Parameter      Requirements      Type      Maxlength      Description                  type      mandatory      String             “Revoke”      GrantGrant network manager privileges.If the executor is one of the network addresses of the SASEUL node, it can execute this contract to get network manager privileges.Request Parameters            Parameter      Requirements      Type      Maxlength      Description                  type      mandatory      String             “Grant”      OracleA network manager can execute this contract to generate a transaction without making status changes other than commiting the transaction to the block.Request Parameters            Parameter      Requirements      Type      Maxlength      Description                  type      mandatory      String             “Oracle”              code      mandatory      String             65536      System RequestsSystem requests provide methods to query data from block data and status.GetBlockGet main chain block information by block hash or height.Request Parameters            Parameter      Requirements      Type      Maxlength      Description                  type      mandatory      String             “GetBlock”              target      optional      String      78      block hash or height              full      optional      Boolean      5      true or falsedefault value : false      Return value{    \"code\": 200,    \"data\": {        \"height\": 35291,        \"s_timestamp\": 1655968582000000,        \"previous_blockhash\": \"05e2183ad9d4805a3a3a407afc43c6cad280d49482269cde552926d820a281ef5364a3f45818a0\",        \"blockhash\": \"05e2183b16dd808135543a804a013a3a32ac4d00e5bdfa2b5cc7f822b586263b78d678e5b136a5\",        \"seal\": {            \"dc87f8e1a2b0661fc0198c14dd8833e3d07afe6b44f7\": {                \"hypothesis_hash\": \"cb1cef508ef9328a0e9ffaa77cb384ffbe3b2f7c049312c7e053a3deb94b080f\",                \"s_timestamp\": 1655968582000000,                \"public_key\": \"b8cc28d08ce9aa168e116b79c77ca58c0e3bc9738c393f4dbb071de118463d56\",                \"signature\": \"45d9df99db26c278a2140b98274aedc6906068b7c8efcc0f14986065fa2730a9aa3ab38f7cec137ac25bfffd7ff78475432d876c5cf54855ec27fa28379f3d02\"            },            \"e370854bfafe91bc2a8c076d06ca34c5ce8af8f1ce92\": {                \"hypothesis_hash\": \"cb1cef508ef9328a0e9ffaa77cb384ffbe3b2f7c049312c7e053a3deb94b080f\",                \"s_timestamp\": 1655968582000000,                \"public_key\": \"f877a00ea736c5760eb5bf1624375dd90be270bf1483826922a74b4cdb7eb27b\",                \"signature\": \"f6dceeeb4b308f115f00788375916923afeae6c00d5b3f8d0c324656b992e164695b1cb553cc0e93d6319c7a14ffb0b97f0fdae1b85ee24998f077751a20d409\"            },            \"19dea08edb10b9c9ec4d7380ed7b57eda78cadb34659\": {                \"hypothesis_hash\": \"cb1cef508ef9328a0e9ffaa77cb384ffbe3b2f7c049312c7e053a3deb94b080f\",                \"s_timestamp\": 1655968582000000,                \"public_key\": \"17de9280bfb37252a162387f776bdfc4349a478afc5863b8052086e2351db507\",                \"signature\": \"bb0da7e50f0e3eb0a2af8980638cc1a16fbd31a5050d0291e2ad0d0c4657ad6c8e8c468627a5e1a0a9fa15a214ec9c512df2012802b626bfd30c2e9917e31e03\"            },            \"6e2e8385ed855734c164ed14fe38cb3ae7bc007b0f1b\": {                \"hypothesis_hash\": \"cb1cef508ef9328a0e9ffaa77cb384ffbe3b2f7c049312c7e053a3deb94b080f\",                \"s_timestamp\": 1655968582000000,                \"public_key\": \"daa1dfc9d9320bbe5a216c388c2f37ecfea606ef031e6419502bfb9f9b2d2b6c\",                \"signature\": \"32328ca892f3ed55374cad87bc589146fc17d2fa17742649c2c2d02e67a04a89b2f82dc6fb7afe35cdabd03d02e7c93b3f6c55f50108d6ec45b4a3dc08c81001\"            },            \"f1de3b2f1ee7119364681c632138b1aee64cfb849a62\": {                \"hypothesis_hash\": \"cb1cef508ef9328a0e9ffaa77cb384ffbe3b2f7c049312c7e053a3deb94b080f\",                \"s_timestamp\": 1655968582000000,                \"public_key\": \"1b79f7b094f380aecf9e715bb7c84c21ede973905a5492ad26f829ee6c6f3a51\",                \"signature\": \"bff230f5b14d6569e51aec77548020d9ce4c110f78cf51b13deb215a23b0c3af2a2c780daae58f05b1a7d0f7ffc2b6a0d6ffa859d8df22b03fa68faf20c7650d\"            }        },        \"transactions\": {            \"05e2183af527ebba4415b68e4ff5c2419f94b853793c76a3ce36b1f0c4d516be06dcf1bca6f878\": {                \"transaction\": {                    \"type\": \"Send\",                    \"timestamp\": 1655968579790827,                    \"from\": \"6c66f932ef35f232900eaffe4dc6e795d76305b703a0\",                    \"to\": \"08f080b723d4f4465ba54d10ab179f2bfb89e289a02e\",                    \"amount\": \"1564000000000\"                },                \"public_key\": \"75b7a3208f53f8d6ccdcb5ffd374dae350c3df89da239696ea88204d87b0a9a1\",                \"signature\": \"86f82cab730de8a70a7030dad4728295cf549318d32334819060af02fd429efeaa04928cc0920fceb7e07b91d92bc78ec4a90724d9bb22e71401c3f2aee5f10e\"            }        },        \"universal_updates\": {            \"b3c1ed9ce9df9d2531bb6e2945f044590974408f547f3574d56075e13394770d6c66f932ef35f232900eaffe4dc6e795d76305b703a0\": {                \"old\": \"10958923744286000000\",                \"new\": \"10958922179872000000\"            },            \"b3c1ed9ce9df9d2531bb6e2945f044590974408f547f3574d56075e13394770d08f080b723d4f4465ba54d10ab179f2bfb89e289a02e\": {                \"old\": \"520222813697008584188569752\",                \"new\": \"520222813697010148188569752\"            },            \"c5ca2cb405daf22453b559420907bb12d7fb34519ac55d81f47829054374512f67ed319a52601f14b1fb691b85fac19f7f468b2538f8\": {                \"old\": \"181180282738325854369242\",                \"new\": \"181510639881183078274003\"            },            \"c5ca2cb405daf22453b559420907bb12d7fb34519ac55d81f47829054374512f8c3269f7e2b2dd4e9eab7c95249a032184e7b307104f\": {                \"old\": \"242187500011289166651\",                \"new\": \"510044642868497738079\"            },            \"c5ca2cb405daf22453b559420907bb12d7fb34519ac55d81f47829054374512f6e2e8385ed855734c164ed14fe38cb3ae7bc007b0f1b\": {                \"old\": \"484375000108746995223\",                \"new\": \"752232142965955566651\"            },            \"c5ca2cb405daf22453b559420907bb12d7fb34519ac55d81f47829054374512f541bb894597185f78d29de128c6c43e458926461a388\": {                \"old\": \"44881522817614767127270\",                \"new\": \"45211879960471991032031\"            },            \"c5ca2cb405daf22453b559420907bb12d7fb34519ac55d81f47829054374512f19dea08edb10b9c9ec4d7380ed7b57eda78cadb34659\": {                \"old\": \"484375000108746995223\",                \"new\": \"752232142965955566651\"            },            \"c5ca2cb405daf22453b559420907bb12d7fb34519ac55d81f47829054374512f0f63ef80b0d9ac01365a3e05630133cbea9c5be8f34d\": {                \"old\": \"37732415674720229151440\",                \"new\": \"38000272817577437722868\"            },            \"c5ca2cb405daf22453b559420907bb12d7fb34519ac55d81f47829054374512f08f080b723d4f4465ba54d10ab179f2bfb89e289a02e\": {                \"old\": \"1481478149802187021469093\",                \"new\": \"1481746006945044230040521\"            }        },        \"local_updates\": {            \"290eed314ce4d91c387028c290936b5b261e06f05d871bad42dfdf7436e89e9c00000000000000000000000000000000000000000000\": {                \"old\": \"0\",                \"new\": \"0\"            },            \"724d2935080d38850e49b74927eb0351146c9ee955731f4ef53f24366c5eb9b100000000000000000000000000000000000000000000\": {                \"old\": 42705,                \"new\": 42706            },            \"12194c0ef66a96758afcf4e7ddd3a0b851bba110c7dd2ffff358cbabd725b3fc00000000000000000000000000000000000000000000\": {                \"old\": 34384,                \"new\": 34385            }        }    },    \"status\": \"success\"}ListBlockGet array list of main chain block information.Request Parameters            Parameter      Requirements      Type      Maxlength      Description                  type      mandatory      String             “ListBlock”              height      optional      Int      16      block number              count      optional      Int      4      max value : 9999 defaultvalue : 20              sort      optional      Int      2      -1 : ascending order1 : descending orderdefault value : -1      Return value{    \"code\": 200,    \"data\": {        \"35287\": {            \"height\": 35287,            \"s_timestamp\": 1655957952000000,            \"previous_blockhash\": \"05e215c0a85080bb21fa69e66b25baa8b9ee0c2bd94134ab46ee79f1def6ce0d0eaa4e7b6f63f9\",            \"blockhash\": \"05e215c17df0006cc4087c25a4ddca010598b63450567b7c6e1b42c0e9d0bf44708894347519ae\",            \"transaction_count\": 4        },        \"35288\": {            \"height\": 35288,            \"s_timestamp\": 1655957966000000,            \"previous_blockhash\": \"05e215c17df0006cc4087c25a4ddca010598b63450567b7c6e1b42c0e9d0bf44708894347519ae\",            \"blockhash\": \"05e215c2538f8079c5cb9497ff8edac6289f20c8e3f3edc0c9fe85010717f2af9ee09a7739f799\",            \"transaction_count\": 8        },        \"35289\": {            \"height\": 35289,            \"s_timestamp\": 1655967792000000,            \"previous_blockhash\": \"05e215c2538f8079c5cb9497ff8edac6289f20c8e3f3edc0c9fe85010717f2af9ee09a7739f799\",            \"blockhash\": \"05e2180c006c00ea5c3e1e2045b4dea795879cd705b8f1206bf10044e0d7d4a9b6b9408c000400\",            \"transaction_count\": 1640        },        \"35290\": {            \"height\": 35290,            \"s_timestamp\": 1655968578000000,            \"previous_blockhash\": \"05e2180c006c00ea5c3e1e2045b4dea795879cd705b8f1206bf10044e0d7d4a9b6b9408c000400\",            \"blockhash\": \"05e2183ad9d4805a3a3a407afc43c6cad280d49482269cde552926d820a281ef5364a3f45818a0\",            \"transaction_count\": 190        },        \"35291\": {            \"height\": 35291,            \"s_timestamp\": 1655968582000000,            \"previous_blockhash\": \"05e2183ad9d4805a3a3a407afc43c6cad280d49482269cde552926d820a281ef5364a3f45818a0\",            \"blockhash\": \"05e2183b16dd808135543a804a013a3a32ac4d00e5bdfa2b5cc7f822b586263b78d678e5b136a5\",            \"transaction_count\": 1        }    },    \"status\": \"success\"}BlockCountGet total count of the main chain blocks.Request Parameters            Parameter      Requirements      Type      Maxlength      Description                  type      mandatory      String             “BlockCount”              target      optional      String      78      block hash or height              full      optional      Boolean      5      true or falsedefault value : false      Return value{    \"code\": 200,    \"data\": 35291,    \"status\": \"success\"}GetTransactionGet transaction information by transaction hash.Request Parameters            Parameter      Requirements      Type      Maxlength      Description                  type      mandatory      String             “GetTransaction”              target      optional      String      78      transaction hash      Return value{    \"code\": 200,    \"data\": {        \"transaction\": {            \"type\": \"Send\",            \"timestamp\": 1655968579790827,            \"from\": \"6c66f932ef35f232900eaffe4dc6e795d76305b703a0\",            \"to\": \"08f080b723d4f4465ba54d10ab179f2bfb89e289a02e\",            \"amount\": \"1564000000000\"        },        \"public_key\": \"75b7a3208f53f8d6ccdcb5ffd374dae350c3df89da239696ea88204d87b0a9a1\",        \"signature\": \"86f82cab730de8a70a7030dad4728295cf549318d32334819060af02fd429efeaa04928cc0920fceb7e07b91d92bc78ec4a90724d9bb22e71401c3f2aee5f10e\"    },    \"status\": \"success\"}ListTransactionGet array list of transaction information.Request Parameters            Parameter      Requirements      Type      Maxlength      Description                  type      mandatory      String             “ListTransaction”              address      optional      String      44                     page      optional      Int      16      Page Number of the list.default value : 1              count      mandatory      Int      4      Number of lists to be displayed on a page.0 &lt; count ≤ 1000      Return value{    \"code\": 200,    \"data\": {        \"05e2183af527ebba4415b68e4ff5c2419f94b853793c76a3ce36b1f0c4d516be06dcf1bca6f878\": {            \"transaction\": {                \"type\": \"Send\",                \"timestamp\": 1655968579790827,                \"from\": \"6c66f932ef35f232900eaffe4dc6e795d76305b703a0\",                \"to\": \"08f080b723d4f4465ba54d10ab179f2bfb89e289a02e\",                \"amount\": \"1564000000000\"            },            \"public_key\": \"75b7a3208f53f8d6ccdcb5ffd374dae350c3df89da239696ea88204d87b0a9a1\",            \"signature\": \"86f82cab730de8a70a7030dad4728295cf549318d32334819060af02fd429efeaa04928cc0920fceb7e07b91d92bc78ec4a90724d9bb22e71401c3f2aee5f10e\"        },        \"05e2183a931710b7dfdfd40407bfd07249d70cd342492d5e94afa338aec228845b35d531a742ac\": {            \"transaction\": {                \"type\": \"Send\",                \"timestamp\": 1655968573363984,                \"from\": \"6c66f932ef35f232900eaffe4dc6e795d76305b703a0\",                \"to\": \"08f080b723d4f4465ba54d10ab179f2bfb89e289a02e\",                \"amount\": \"4428000000000\"            },            \"public_key\": \"75b7a3208f53f8d6ccdcb5ffd374dae350c3df89da239696ea88204d87b0a9a1\",            \"signature\": \"93047b98c514419e9122962e9e10032808cd1cc2c2d2744391bf25e6ac6977828537dd7fb2bd36fe6fddd1ab472b5518a6de9fbbc1ead2e75d4f1502f4d6860b\"        },        \"05e2183a5c3c91d0f93a2f85174eb54ff1e79b2158dcec7c9379192f919a36a3daf95e604d6785\": {            \"transaction\": {                \"type\": \"Send\",                \"timestamp\": 1655968569769105,                \"from\": \"6c66f932ef35f232900eaffe4dc6e795d76305b703a0\",                \"to\": \"08f080b723d4f4465ba54d10ab179f2bfb89e289a02e\",                \"amount\": \"6168000000000\"            },            \"public_key\": \"75b7a3208f53f8d6ccdcb5ffd374dae350c3df89da239696ea88204d87b0a9a1\",            \"signature\": \"41d0de58cfaeb1f5c1703310e152a1ca9ef931ad3d1b8b27254851922fc4316249f1ad3b6cf6ca304e2b3ce1dc578bdc3a2fc50c4bfee1d54d6b7fd8fbd33200\"        }    },    \"status\": \"success\"}TransactionCountGet total count of transactions.Request Parameters            Parameter      Requirements      Type      Maxlength      Description                  type      mandatory      String             “TransactionCount”      Return value{    \"code\": 200,    \"data\": 3,    \"status\": \"success\"}GetCodeGet registered code of a request or contract by contract index hash.Request Parameters            Parameter      Requirements      Type      Maxlength      Description                  type      mandatory      String             “GetCode”              ctype      optional      String      10      selected value : contract, requestdefault value : contract              target      optional      String      64      hash      Return value{    \"code\": 200,    \"data\": {        \"58c33e328b93af6d245c3ceb97bc97adcb859f7b4ffc8bade99b184713696d7840aba7d1d362d2c16eea2e4a73e1d9d7976e729c1db4\": \"{\\\"type\\\":\\\"contract\\\",\\\"name\\\":\\\"Send\\\",\\\"version\\\":\\\"3\\\",\\\"nonce\\\":\\\"8c85a6569fe901d3a4b08b9b2c85a57b00f490c3ac1feeb3e19782ca80370349\\\",\\\"writer\\\":\\\"00000000000000000000000000000000000000000000\\\",\\\"parameters\\\":{\\\"to\\\":{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"string\\\",\\\"maxlength\\\":44,\\\"requirements\\\":true,\\\"default\\\":null,\\\"cases\\\":null},\\\"amount\\\":{\\\"name\\\":\\\"amount\\\",\\\"type\\\":\\\"string\\\",\\\"maxlength\\\":40,\\\"requirements\\\":true,\\\"default\\\":0,\\\"cases\\\":null}},\\\"conditions\\\":[[{\\\"$gte\\\":[{\\\"$read_universal\\\":[\\\"balance\\\",{\\\"$load_param\\\":[\\\"from\\\"]},\\\"0\\\"]},{\\\"$add\\\":[{\\\"$load_param\\\":[\\\"amount\\\"]},{\\\"$precise_mul\\\":[{\\\"$load_param\\\":[\\\"size\\\"]},\\\"1000000\\\",0]}]}]},\\\"You can't send more than what you have. \\\"],[{\\\"$gte\\\":[{\\\"$load_param\\\":[\\\"amount\\\"]},\\\"0\\\"]},\\\"Amount must exceed zero. \\\"]],\\\"updates\\\":[{\\\"$write_universal\\\":[\\\"balance\\\",{\\\"$load_param\\\":[\\\"from\\\"]},{\\\"$sub\\\":[{\\\"$sub\\\":[{\\\"$read_universal\\\":[\\\"balance\\\",{\\\"$load_param\\\":[\\\"from\\\"]},\\\"0\\\"]},{\\\"$load_param\\\":[\\\"amount\\\"]}]},{\\\"$precise_mul\\\":[{\\\"$load_param\\\":[\\\"size\\\"]},\\\"1000000\\\",0]}]}]},{\\\"$write_universal\\\":[\\\"balance\\\",{\\\"$load_param\\\":[\\\"to\\\"]},{\\\"$add\\\":[{\\\"$read_universal\\\":[\\\"balance\\\",{\\\"$load_param\\\":[\\\"to\\\"]},\\\"0\\\"]},{\\\"$load_param\\\":[\\\"amount\\\"]}]}]},{\\\"$write_local\\\":[\\\"recycle_resource\\\",\\\"00000000000000000000000000000000000000000000\\\",{\\\"$add\\\":[{\\\"$read_local\\\":[\\\"recycle_resource\\\",\\\"00000000000000000000000000000000000000000000\\\",\\\"0\\\"]},{\\\"$precise_div\\\":[{\\\"$precise_mul\\\":[{\\\"$load_param\\\":[\\\"size\\\"]},\\\"1000000\\\",0]},{\\\"$read_universal\\\":[\\\"multiplier\\\",\\\"00000000000000000000000000000000000000000000\\\",\\\"1\\\"]},0]}]}]}]}\"    },    \"status\": \"success\"}ListCodeGet array list of registered contracts and requests.Request Parameters            Parameter      Requirements      Type      Maxlength      Description                  type      mandatory      String             “ListCode”              page      optional      Int      16      Page Number of the list.default value : 1              count      mandatory      Int      4      Number of lists to be displayed on a page.0 &lt; count ≤ 100      Return value{    \"code\": 200,    \"data\": {        \"contracts\": {            \"286d8ee736e26e667ba9e3d52219392cae73761ed239\": \"{\\\"type\\\":\\\"contract\\\",\\\"name\\\":\\\"Refine\\\",\\\"version\\\":\\\"2\\\",\\\"nonce\\\":\\\"8c85a6569fe901d3a4b08b9b2c85a57b00f490c3ac1feeb3e19782ca80370349\\\",\\\"writer\\\":\\\"00000000000000000000000000000000000000000000\\\",\\\"parameters\\\":{\\\"amount\\\":{\\\"name\\\":\\\"amount\\\",\\\"type\\\":\\\"string\\\",\\\"maxlength\\\":40,\\\"requirements\\\":true,\\\"default\\\":0,\\\"cases\\\":null}},\\\"conditions\\\":[[{\\\"$gt\\\":[{\\\"$load_param\\\":[\\\"amount\\\"]},\\\"0\\\"]},\\\"The amount to be refined must be greater than zero. \\\"],[{\\\"$eq\\\":[{\\\"$scale\\\":[{\\\"$load_param\\\":[\\\"amount\\\"]}]},\\\"0\\\"]},\\\"The amount to be refined must be an integer. \\\"],[{\\\"$gte\\\":[{\\\"$read_universal\\\":[\\\"resource\\\",{\\\"$load_param\\\":[\\\"from\\\"]},\\\"0\\\"]},{\\\"$load_param\\\":[\\\"amount\\\"]}]},\\\"The amount to be refined must be greater than or equal to the amount of resources you have. \\\"],[{\\\"$gt\\\":[{\\\"$precise_mul\\\":[{\\\"$load_param\\\":[\\\"amount\\\"]},{\\\"$read_universal\\\":[\\\"multiplier\\\",\\\"00000000000000000000000000000000000000000000\\\",\\\"1\\\"]},0]},\\\"0\\\"]},\\\"The refined amount must be greater than zero. \\\"],[{\\\"$gt\\\":[{\\\"$precise_mul\\\":[{\\\"$load_param\\\":[\\\"amount\\\"]},{\\\"$read_universal\\\":[\\\"multiplier\\\",\\\"00000000000000000000000000000000000000000000\\\",\\\"1\\\"]},0]},{\\\"$precise_mul\\\":[{\\\"$load_param\\\":[\\\"size\\\"]},\\\"1000000\\\",0]}]},\\\"The refined amount must be greater than the fee. \\\"]],\\\"updates\\\":[{\\\"$write_local\\\":[\\\"recycle_resource\\\",\\\"00000000000000000000000000000000000000000000\\\",{\\\"$add\\\":[{\\\"$read_local\\\":[\\\"recycle_resource\\\",\\\"00000000000000000000000000000000000000000000\\\",\\\"0\\\"]},{\\\"$precise_div\\\":[{\\\"$precise_mul\\\":[{\\\"$load_param\\\":[\\\"size\\\"]},\\\"1000000\\\",0]},{\\\"$read_universal\\\":[\\\"multiplier\\\",\\\"00000000000000000000000000000000000000000000\\\",\\\"1\\\"]},0]}]}]},{\\\"$write_universal\\\":[\\\"reduction_limit\\\",\\\"00000000000000000000000000000000000000000000\\\",{\\\"$if\\\":[{\\\"$gt\\\":[{\\\"$read_universal\\\":[\\\"season_supply\\\",\\\"00000000000000000000000000000000000000000000\\\",\\\"0\\\"]},{\\\"$read_universal\\\":[\\\"reduction_limit\\\",\\\"00000000000000000000000000000000000000000000\\\",\\\"1000000000000000000000000000\\\"]}]},{\\\"$precise_mul\\\":[\\\"1000000000000000000000000000\\\",{\\\"$if\\\":[{\\\"$lt\\\":[{\\\"$precise_mul\\\":[{\\\"$read_universal\\\":[\\\"multiplier\\\",\\\"00000000000000000000000000000000000000000000\\\",\\\"1\\\"]},\\\"0.84375\\\",10]},\\\"0.0000001\\\"]},\\\"0.0000001\\\",{\\\"$precise_mul\\\":[{\\\"$read_universal\\\":[\\\"multiplier\\\",\\\"00000000000000000000000000000000000000000000\\\",\\\"1\\\"]},\\\"0.84375\\\",10]}]},0]},{\\\"$read_universal\\\":[\\\"reduction_limit\\\",\\\"00000000000000000000000000000000000000000000\\\",\\\"1000000000000000000000000000\\\"]}]}]},{\\\"$write_universal\\\":[\\\"multiplier\\\",\\\"00000000000000000000000000000000000000000000\\\",{\\\"$if\\\":[{\\\"$gt\\\":[{\\\"$read_universal\\\":[\\\"season_supply\\\",\\\"00000000000000000000000000000000000000000000\\\",\\\"0\\\"]},{\\\"$read_universal\\\":[\\\"reduction_limit\\\",\\\"00000000000000000000000000000000000000000000\\\",\\\"1000000000000000000000000000\\\"]}]},{\\\"$if\\\":[{\\\"$lt\\\":[{\\\"$precise_mul\\\":[{\\\"$read_universal\\\":[\\\"multiplier\\\",\\\"00000000000000000000000000000000000000000000\\\",\\\"1\\\"]},\\\"0.84375\\\",10]},\\\"0.0000001\\\"]},\\\"0.0000001\\\",{\\\"$precise_mul\\\":[{\\\"$read_universal\\\":[\\\"multiplier\\\",\\\"00000000000000000000000000000000000000000000\\\",\\\"1\\\"]},\\\"0.84375\\\",10]}]},{\\\"$read_universal\\\":[\\\"multiplier\\\",\\\"00000000000000000000000000000000000000000000\\\",\\\"1\\\"]}]}]},{\\\"$write_universal\\\":[\\\"total_supply\\\",\\\"00000000000000000000000000000000000000000000\\\",{\\\"$add\\\":[{\\\"$read_universal\\\":[\\\"total_supply\\\",\\\"00000000000000000000000000000000000000000000\\\",\\\"0\\\"]},{\\\"$precise_mul\\\":[{\\\"$load_param\\\":[\\\"amount\\\"]},{\\\"$read_universal\\\":[\\\"multiplier\\\",\\\"00000000000000000000000000000000000000000000\\\",\\\"1\\\"]},0]}]}]},{\\\"$write_universal\\\":[\\\"season_supply\\\",\\\"00000000000000000000000000000000000000000000\\\",{\\\"$if\\\":[{\\\"$gt\\\":[{\\\"$read_universal\\\":[\\\"season_supply\\\",\\\"00000000000000000000000000000000000000000000\\\",\\\"0\\\"]},{\\\"$read_universal\\\":[\\\"reduction_limit\\\",\\\"00000000000000000000000000000000000000000000\\\",\\\"1000000000000000000000000000\\\"]}]},\\\"0\\\",{\\\"$add\\\":[{\\\"$read_universal\\\":[\\\"season_supply\\\",\\\"00000000000000000000000000000000000000000000\\\",\\\"0\\\"]},{\\\"$precise_mul\\\":[{\\\"$load_param\\\":[\\\"amount\\\"]},{\\\"$read_universal\\\":[\\\"multiplier\\\",\\\"00000000000000000000000000000000000000000000\\\",\\\"1\\\"]},0]}]}]}]},{\\\"$write_universal\\\":[\\\"resource\\\",{\\\"$load_param\\\":[\\\"from\\\"]},{\\\"$sub\\\":[{\\\"$read_universal\\\":[\\\"resource\\\",{\\\"$load_param\\\":[\\\"from\\\"]},\\\"0\\\"]},{\\\"$load_param\\\":[\\\"amount\\\"]}]}]},{\\\"$write_universal\\\":[\\\"balance\\\",{\\\"$load_param\\\":[\\\"from\\\"]},{\\\"$sub\\\":[{\\\"$add\\\":[{\\\"$read_universal\\\":[\\\"balance\\\",{\\\"$load_param\\\":[\\\"from\\\"]},\\\"0\\\"]},{\\\"$precise_mul\\\":[{\\\"$load_param\\\":[\\\"amount\\\"]},{\\\"$read_universal\\\":[\\\"multiplier\\\",\\\"00000000000000000000000000000000000000000000\\\",\\\"1\\\"]},0]}]},{\\\"$precise_mul\\\":[{\\\"$load_param\\\":[\\\"size\\\"]},\\\"1000000\\\",0]}]}]}]}\",            \"40aba7d1d362d2c16eea2e4a73e1d9d7976e729c1db4\": \"{\\\"type\\\":\\\"contract\\\",\\\"name\\\":\\\"Send\\\",\\\"version\\\":\\\"3\\\",\\\"nonce\\\":\\\"8c85a6569fe901d3a4b08b9b2c85a57b00f490c3ac1feeb3e19782ca80370349\\\",\\\"writer\\\":\\\"00000000000000000000000000000000000000000000\\\",\\\"parameters\\\":{\\\"to\\\":{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"string\\\",\\\"maxlength\\\":44,\\\"requirements\\\":true,\\\"default\\\":null,\\\"cases\\\":null},\\\"amount\\\":{\\\"name\\\":\\\"amount\\\",\\\"type\\\":\\\"string\\\",\\\"maxlength\\\":40,\\\"requirements\\\":true,\\\"default\\\":0,\\\"cases\\\":null}},\\\"conditions\\\":[[{\\\"$gte\\\":[{\\\"$read_universal\\\":[\\\"balance\\\",{\\\"$load_param\\\":[\\\"from\\\"]},\\\"0\\\"]},{\\\"$add\\\":[{\\\"$load_param\\\":[\\\"amount\\\"]},{\\\"$precise_mul\\\":[{\\\"$load_param\\\":[\\\"size\\\"]},\\\"1000000\\\",0]}]}]},\\\"You can't send more than what you have. \\\"],[{\\\"$gte\\\":[{\\\"$load_param\\\":[\\\"amount\\\"]},\\\"0\\\"]},\\\"Amount must exceed zero. \\\"]],\\\"updates\\\":[{\\\"$write_universal\\\":[\\\"balance\\\",{\\\"$load_param\\\":[\\\"from\\\"]},{\\\"$sub\\\":[{\\\"$sub\\\":[{\\\"$read_universal\\\":[\\\"balance\\\",{\\\"$load_param\\\":[\\\"from\\\"]},\\\"0\\\"]},{\\\"$load_param\\\":[\\\"amount\\\"]}]},{\\\"$precise_mul\\\":[{\\\"$load_param\\\":[\\\"size\\\"]},\\\"1000000\\\",0]}]}]},{\\\"$write_universal\\\":[\\\"balance\\\",{\\\"$load_param\\\":[\\\"to\\\"]},{\\\"$add\\\":[{\\\"$read_universal\\\":[\\\"balance\\\",{\\\"$load_param\\\":[\\\"to\\\"]},\\\"0\\\"]},{\\\"$load_param\\\":[\\\"amount\\\"]}]}]},{\\\"$write_local\\\":[\\\"recycle_resource\\\",\\\"00000000000000000000000000000000000000000000\\\",{\\\"$add\\\":[{\\\"$read_local\\\":[\\\"recycle_resource\\\",\\\"00000000000000000000000000000000000000000000\\\",\\\"0\\\"]},{\\\"$precise_div\\\":[{\\\"$precise_mul\\\":[{\\\"$load_param\\\":[\\\"size\\\"]},\\\"1000000\\\",0]},{\\\"$read_universal\\\":[\\\"multiplier\\\",\\\"00000000000000000000000000000000000000000000\\\",\\\"1\\\"]},0]}]}]}]}\",            \"e2fefa12710be137ad08dae8c7524156b75f564be193\": \"{\\\"type\\\":\\\"contract\\\",\\\"name\\\":\\\"HotFix\\\",\\\"version\\\":\\\"2\\\",\\\"nonce\\\":\\\"8c85a6569fe901d3a4b08b9b2c85a57b00f490c3ac1feeb3e19782ca80370349\\\",\\\"writer\\\":\\\"00000000000000000000000000000000000000000000\\\",\\\"parameters\\\":[],\\\"conditions\\\":[[false,\\\"It's closed contract. \\\"]],\\\"updates\\\":[]}\"        },        \"requests\": {            \"ba3eb999c80e61657ef1a4dd27359a23d9bbb94d610a\": \"{\\\"type\\\":\\\"request\\\",\\\"name\\\":\\\"GetBalance\\\",\\\"version\\\":\\\"1\\\",\\\"nonce\\\":\\\"8c85a6569fe901d3a4b08b9b2c85a57b00f490c3ac1feeb3e19782ca80370349\\\",\\\"writer\\\":\\\"00000000000000000000000000000000000000000000\\\",\\\"parameters\\\":{\\\"address\\\":{\\\"name\\\":\\\"address\\\",\\\"type\\\":\\\"string\\\",\\\"maxlength\\\":44,\\\"requirements\\\":true,\\\"default\\\":\\\"\\\",\\\"cases\\\":null}},\\\"conditions\\\":[],\\\"response\\\":{\\\"balance\\\":{\\\"$read_universal\\\":[\\\"balance\\\",{\\\"$load_param\\\":[\\\"address\\\"]},\\\"0\\\"]}}}\"        }    },    \"status\": \"success\"}CodeCountGet total count of registered contracts and requests.Request Parameters            Parameter      Requirements      Type      Maxlength      Description                  type      mandatory      String             “CodeCount”      Return value{    \"code\": 200,    \"data\": {        \"contracts\": 3,        \"requests\": 1    },    \"status\": \"success\"}GetResourceBlockGet resource chain block information by block hash or height.Request Parameters            Parameter      Requirements      Type      Maxlength      Description                  type      mandatory      String             “GetResourceBlock”              target      optional      String      78      block hash              full      optional      Boolean      5      true or false      Return value{    \"code\": 200,    \"data\": {        \"height\": 59924,        \"blockhash\": \"05e266f5d3ac1b481cc28ee3003aad8d1bbc934bd48cd059f7e435ec3d1b2950d6539a4d0b0082\",        \"previous_blockhash\": \"05e266e79d0d37b8d590d23ee771b4783d1836c19fbe1b33f53e265e9af6060971280e072cd71a\",        \"nonce\": \"81fdb4ae3c632837f5f938a0d4f450c33a20f5cfbe4465c6d50a66fd86dc9294\",        \"timestamp\": 1656306722384923,        \"difficulty\": \"3572657\",        \"main_height\": 35291,        \"main_blockhash\": \"05e2183b16dd808135543a804a013a3a32ac4d00e5bdfa2b5cc7f822b586263b78d678e5b136a5\",        \"validator\": \"99c4d1da4e77342610f2d37750b1e2ef8b528cffd67a\",        \"miner\": \"08f080b723d4f4465ba54d10ab179f2bfb89e289a02e\",        \"receipts\": {            \"99c4d1da4e77342610f2d37750b1e2ef8b528cffd67a\": {                \"previous_blockhash\": \"05e2183b16dd808135543a804a013a3a32ac4d00e5bdfa2b5cc7f822b586263b78d678e5b136a5\",                \"receipt_hash\": \"7250c5e4ac8f5c0e027cf2a46b035a1e6513281231a5b598c9ed1de03028f994\",                \"beneficiary\": \"08f080b723d4f4465ba54d10ab179f2bfb89e289a02e\",                \"signed_query\": {                    \"query\": {                        \"previous_blockhash\": \"05e2183b16dd808135543a804a013a3a32ac4d00e5bdfa2b5cc7f822b586263b78d678e5b136a5\",                        \"address\": \"02a3d46dfd8c773763cb26e55a2afd4e8f2f0abba87b\"                    },                    \"public_key\": \"8c55a0448fccf2133b2765e384db68fd23d89cfed1dfa70f621ec98afb349d3e\",                    \"signature\": \"5c0f1b933a08d6c999b80b8f58fc8d28e86e8bc15479d7e55f4c3cd4d9dd222ec789ffd6dbfa1a84265dc39b1e4d82025b2fd46c463b663490f01a317c5eaa05\"                },                \"public_key\": \"b5c6e8ddc1f6c0b5b0b98d9e3d344dcbaf31a0a861ce65914956a97541b6c218\",                \"signature\": \"ea3fff61d0ff4de1a086757fde54305ee9871f02228f3fff15b7caef430790db86be64e16823aeedc699ffce9fd0f5a80236a6d3b0359d98f8148ff56315ac02\"            }        }    },    \"status\": \"success\"}ListResourceBlockGet array list of resource chain block information.Request Parameters            Parameter      Requirements      Type      Maxlength      Description                  type      mandatory      String             “ListResourceBlock”              page      optional      Int      16      Page Number of the list.default value : 1              count      mandatory      Int      4      Number of lists to be displayed on a page.0 &lt; count ≤ 100      Return value{    \"code\": 200,    \"data\": [        {            \"height\": 59996,            \"blockhash\": \"05e27648ba87c05ccad864ee21cec6916a29a393e2b6c1050a509f57f55802e6352799da1b6699\",            \"previous_blockhash\": \"05e2764421f1bc832b995b4f88940ee52b16a23386d598eaaf608504b28bbd503c23d24b9237f6\",            \"nonce\": \"706117f586a65f42f81a049a130dc1fc4027f11297aab7162dd8404edf747aad\",            \"timestamp\": 1656372537755584,            \"difficulty\": \"3572657\",            \"main_height\": 35291,            \"main_blockhash\": \"05e2183b16dd808135543a804a013a3a32ac4d00e5bdfa2b5cc7f822b586263b78d678e5b136a5\",            \"validator\": \"99c4d1da4e77342610f2d37750b1e2ef8b528cffd67a\",            \"miner\": \"08f080b723d4f4465ba54d10ab179f2bfb89e289a02e\",            \"receipt_count\": 1        },        {            \"height\": 59995,            \"blockhash\": \"05e2764421f1bc832b995b4f88940ee52b16a23386d598eaaf608504b28bbd503c23d24b9237f6\",            \"previous_blockhash\": \"05e275a2f19c33e5abea6d0f3b16d9d7c5310828b44cf61323e67665de4bb2faea2b443f7f5d7c\",            \"nonce\": \"8e1f34aceef5005e3648533d9836a86afa54d77d5ec0f1e2df8b0e0399c73f89\",            \"timestamp\": 1656372460646844,            \"difficulty\": \"3572657\",            \"main_height\": 35291,            \"main_blockhash\": \"05e2183b16dd808135543a804a013a3a32ac4d00e5bdfa2b5cc7f822b586263b78d678e5b136a5\",            \"validator\": \"99c4d1da4e77342610f2d37750b1e2ef8b528cffd67a\",            \"miner\": \"08f080b723d4f4465ba54d10ab179f2bfb89e289a02e\",            \"receipt_count\": 1        },        {            \"height\": 59994,            \"blockhash\": \"05e275a2f19c33e5abea6d0f3b16d9d7c5310828b44cf61323e67665de4bb2faea2b443f7f5d7c\",            \"previous_blockhash\": \"05e27586782397ed9e22d95d7310435499539b76f2442610ee6415d81d22bf456e229f9de7e8e4\",            \"nonce\": \"799fe766713394b2ad6306144c3cbb7880490645d671236246017748747acace\",            \"timestamp\": 1656369756347443,            \"difficulty\": \"3572657\",            \"main_height\": 35291,            \"main_blockhash\": \"05e2183b16dd808135543a804a013a3a32ac4d00e5bdfa2b5cc7f822b586263b78d678e5b136a5\",            \"validator\": \"99c4d1da4e77342610f2d37750b1e2ef8b528cffd67a\",            \"miner\": \"08f080b723d4f4465ba54d10ab179f2bfb89e289a02e\",            \"receipt_count\": 1        }    ],    \"status\": \"success\"}ResourceBlockCountGet total count of the resource chain blocks.Request Parameters            Parameter      Requirements      Type      Maxlength      Description                  type      mandatory      String             “ResourceBlockCount”      Return value{    \"code\": 200,    \"data\": 59996,    \"status\": \"success\"}GetBlocksGet array list of maximum 256 main blocks searched from the given block height.Request Parameters            Parameter      Requirements      Type      Maxlength      Description                  type      mandatory      String             “GetBlocks”              target      optional      Int      16      block height              full      optional      Boolean      5      true or false      Return value{    \"code\": 200,    \"data\": {        \"254\": {            \"height\": 254,            \"s_timestamp\": 1653447300000000,            \"previous_blockhash\": \"05dfcd32e966c06af572000cdb93d8c7e8ae94583edc218fe6923f17400b24c785a7ce09001894\",            \"blockhash\": \"05dfcd32f8a900e05ee2b1a1627da4ad26419490852d4bc026194997bede7acb720fc8cb716129\",            \"transaction_count\": 1        },        \"255\": {            \"height\": 255,            \"s_timestamp\": 1653447301000000,            \"previous_blockhash\": \"05dfcd32f8a900e05ee2b1a1627da4ad26419490852d4bc026194997bede7acb720fc8cb716129\",            \"blockhash\": \"05dfcd3307eb40224075f3d18060336b6cd6481fa6e39b5d3e6f949622480ec0a7e7e61160a25e\",            \"transaction_count\": 0        },        ...        \"508\": {            \"height\": 508,            \"s_timestamp\": 1653874900000000,            \"previous_blockhash\": \"05e030c19e91c0afa2a3b7ca151de55ecbea4a8fde69a439be8698a040668082bebe18068ca91f\",            \"blockhash\": \"05e030c1eadd003b8f9c74f16717a9518165ccfa4c76162405d7d3aaf3382a541142d179e8b2eb\",            \"transaction_count\": 1        },        \"509\": {            \"height\": 509,            \"s_timestamp\": 1653874905000000,            \"previous_blockhash\": \"05e030c1eadd003b8f9c74f16717a9518165ccfa4c76162405d7d3aaf3382a541142d179e8b2eb\",            \"blockhash\": \"05e030c23728400fb4e72cd1673a529efee01c177e9fb5f528c826018b4f6a0fbd65521e3dbc68\",            \"transaction_count\": 1        }    },    \"status\": \"success\"}GetResourceBlocksGet array list of maximum 256 resource blocks searched from the given block height.Request Parameter            Parameter      Requirements      Type      Maxlength      Description                  type      mandatory      String             “GetResourceBlocks”              target      optional      Int      16      resource block height              full      optional      Boolean      5      true or false      Return value{    \"code\": 200,    \"data\": {        \"1\": {            \"height\": 1,            \"blockhash\": \"05df2666f2d45cb827a20f6fefd90cf582f53f06ba12b7962a73bb8b1b540e0c1a6f98fa44481e\",            \"previous_blockhash\": \"\",            \"nonce\": \"b096072cf64cff892e3f9b06b33cd7dbfa3d85332b5a95e69cb69a6c0c8f995b\",            \"timestamp\": 1652730912494684,            \"difficulty\": \"100000\",            \"main_height\": 3,            \"main_blockhash\": \"05df2656a5a1c0fb1f4a26a83fa52f1fdf1e11baa092beef822eb7c92993fd5f07830d66e09cfd\",            \"validator\": \"c63e540b26715f490d763338f1b3f1f60990935f0837\",            \"miner\": \"08f080b723d4f4465ba54d10ab179f2bfb89e289a02e\",            \"receipt_count\": 0        },        \"2\": {            \"height\": 2,            \"blockhash\": \"05df2784a864b12edec184c498d9358a73d5fa5ccea10875f6b395065665cd2f7ddbba0af000a4\",            \"previous_blockhash\": \"05df2666f2d45cb827a20f6fefd90cf582f53f06ba12b7962a73bb8b1b540e0c1a6f98fa44481e\",            \"nonce\": \"571bb5ac65d624ed4b5c92f31f529ddeb06564316b658f77c843fe02f4b0e726\",            \"timestamp\": 1652735705900209,            \"difficulty\": \"100000\",            \"main_height\": 5,            \"main_blockhash\": \"05df268b74eb40d8100e7f7a5e03ed76bf0564eaeb995925490e8cbb4a48af7caeab24b7c36ca8\",            \"validator\": \"c63e540b26715f490d763338f1b3f1f60990935f0837\",            \"miner\": \"08f080b723d4f4465ba54d10ab179f2bfb89e289a02e\",            \"receipt_count\": 1        },        ...        \"255\": {            \"height\": 255,            \"blockhash\": \"05df29200a984454391fdc729b135d8e3e095b025a095abe391d50a7f0e876b7f8098b5bf32920\",            \"previous_blockhash\": \"05df291ef72f0e8b41b3e73f27016613507c8e94150b0f3d7cc4b201bb43124b309fa589928bae\",            \"nonce\": \"b181defe5470d4445e7000fff644c49a500b23ed8f142b6eed63c94429b2b34d\",            \"timestamp\": 1652742607771716,            \"difficulty\": \"100000\",            \"main_height\": 8,            \"main_blockhash\": \"05df28657e1180a3f58b72ce9a49d65ce4f483cfa8074df74274a7c7b07519a6c83e2ebd42d837\",            \"validator\": \"b4ad2245a4e4470ab0db12fcd3eee37f00d3df69c817\",            \"miner\": \"b4ad2245a4e4470ab0db12fcd3eee37f00d3df69c817\",            \"receipt_count\": 1        },        \"256\": {            \"height\": 256,            \"blockhash\": \"05df29203c5fd96e002118b5acf06e53214235c70410ba344d8013539387ab147d7b9300c8d854\",            \"previous_blockhash\": \"05df29200a984454391fdc729b135d8e3e095b025a095abe391d50a7f0e876b7f8098b5bf32920\",            \"nonce\": \"08daac3fa1cc32c8013937a182684b059d2323ede49d01eecc61252f15753c03\",            \"timestamp\": 1652742611034073,            \"difficulty\": \"100000\",            \"main_height\": 8,            \"main_blockhash\": \"05df28657e1180a3f58b72ce9a49d65ce4f483cfa8074df74274a7c7b07519a6c83e2ebd42d837\",            \"validator\": \"b4ad2245a4e4470ab0db12fcd3eee37f00d3df69c817\",            \"miner\": \"b4ad2245a4e4470ab0db12fcd3eee37f00d3df69c817\",            \"receipt_count\": 0        }    },    \"status\": \"success\"}GetResourceGet resource amount of the given address.Request Parameters            Parameter      Requirements      Type      Maxlength      Description                  type      mandatory      String             “GetResource”              address      mandatory      String      44      address where the resource is stored      Return value{    \"code\": 200,    \"data\": {    \"resource\": \"0\"    },    \"status\": \"success\"}"
  },
  
  {
    "title": "Operator",
    "url": "/posts/08-operator/",
    "categories": "Smart Contract",
    "tags": "Smart Contract",
    "date": "2023-04-14 09:00:00 +0900",
    





    
    "snippet": "SummaryThis document is based on the specification of SASEUL JS. The SASEUL main network is currently using version 0.2.0, and we plan to support additional operators through patches.  A method is ...",
    "content": "SummaryThis document is based on the specification of SASEUL JS. The SASEUL main network is currently using version 0.2.0, and we plan to support additional operators through patches.  A method is a collection of operators.  A method is executed only when the “condition” statement is true.  Execution methods can modify status data through the “update” statement.  Query methods can define the value to be returned through the “response” statement.BasicOperatorSASEUL.SmartContract.Operator.condition  function (condition, err_msg)            Parameter      Type      Description                  condition             If this value is true, it will be executed.              err_msg      String             const SASEUL = require('saseul');let op = SASEUL.SmartContract.Operator;let condition, err_msg;let method = new SASEUL.SmartContract.Method();condition = op.gte(3, 1);err_msg = 'err_msg ';method.addExecution(op.condition(condition, err_msg));...SASEUL.SmartContract.Operator.response  function (response)            Parameter      Type      Description                  response      Any             const SASEUL = require('saseul');let op = SASEUL.SmartContract.Operator;let response;let method = new SASEUL.SmartContract.Method();let token_id = op.load_param('token_id');let address = op.load_param('address');let balance = op.read_universal(token_id, address, '0');response = op.response({\"balance\": balance});method.addExecution(response);...SASEUL.SmartContract.Operator.weight  Returns the weight of the executed transaction....let weight = op.weight();...SASEUL.SmartContract.Operator.if  function (condition, if_true, if_false)            Parameter      Type      Description                  condition             If this value is true, return if_true, otherwise return if_false.              if_true                            if_false                    ...next = op.if(min_condition, '0.0000001', '0');...SASEUL.SmartContract.Operator.and  function ([value1, value2, …])...next = op.and([true, false, false]);...SASEUL.SmartContract.Operator.or  function ([value1, value2, …])...next = op.or([true, false, false]);...SASEUL.SmartContract.Operator.get  function (obj, key)ArithmeticOperatorSASEUL.SmartContract.Operator.add  function ([value1, value2, …])...next = op.add([1, 2, 3]);...SASEUL.SmartContract.Operator.sub  function ([value1, value2, …])...next = op.sub([3, 2, 1]);...SASEUL.SmartContract.Operator.mul  function ([value1, value2, …])...next = op.mul([3, 5, 6]);...SASEUL.SmartContract.Operator.div  function ([value1, value2, …])...next = op.div([10, 2, 5]);...SASEUL.SmartContract.Operator.precise_add  function (left, right, scale)...next = op.precise_add(1.15, 2.567, 3);...SASEUL.SmartContract.Operator.precise_sub  function (left, right, scale)...next = op.precise_sub(6.15, 2.567, 3);...SASEUL.SmartContract.Operator.precise_mul  function (left, right, scale)...next = op.precise_mul(6.15, 2.567, 5);...SASEUL.SmartContract.Operator.precise_div  function (left, right, scale)...next = op.precise_div(2.15, 2.567, 3);...SASEUL.SmartContract.Operator.scale  function (value)...val = op.scale(2.15);...CastOperatorSASEUL.SmartContract.Operator.get_type  function (obj)...result = op.get_type(\"string\");...SASEUL.SmartContract.Operator.is_numeric  function (vars)...result = op.is_numeric([1.5]);...SASEUL.SmartContract.Operator.is_int  function (vars)...result = op.is_int([2]);...SASEUL.SmartContract.Operator.is_string  function (vars)...result = op.is_string([\"string\"]);...SASEUL.SmartContract.Operator.is_null  function (vars)...result = op.is_null([null]);...SASEUL.SmartContract.Operator.is_bool  function (vars)...result = op.is_bool([true]);...SASEUL.SmartContract.Operator.is_array  function (vars)...result = op.is_array([[1,2,3]]);...SASEUL.SmartContract.Operator.is_double  function (vars)...result = op.is_double([1.2]);...ComparisonOperatorSASEUL.SmartContract.Operator.eq  function (left, right)...result = op.eq(a, b);...SASEUL.SmartContract.Operator.ne  function (left, right)...result = op.ne(a, b);...SASEUL.SmartContract.Operator.gt  function (left, right)...result = op.gt(a, b);...SASEUL.SmartContract.Operator.lt  function (left, right)...result = op.lt(a, b);...SASEUL.SmartContract.Operator.gte  function (left, right)...result = op.gte(a, b);...SASEUL.SmartContract.Operator.lte  function (left, right)...result = op.lte(a, b);...SASEUL.SmartContract.Operator.in  function (target, cases)...result = op.in(a, [a, b]);...ReadWriteOperatorSASEUL.SmartContract.Operator.load_paramSASEUL.SmartContract.Operator.read_universalSASEUL.SmartContract.Operator.read_localSASEUL.SmartContract.Operator.write_universalSASEUL.SmartContract.Operator.write_localUtilOperatorSASEUL.SmartContract.Operator.concatSASEUL.SmartContract.Operator.strlenSASEUL.SmartContract.Operator.reg_matchSASEUL.SmartContract.Operator.encode_jsonSASEUL.SmartContract.Operator.decode_jsonSASEUL.SmartContract.Operator.hashSASEUL.SmartContract.Operator.short_hashSASEUL.SmartContract.Operator.id_hashSASEUL.SmartContract.Operator.sign_verify"
  },
  
  {
    "title": "Overview",
    "url": "/posts/07-overview/",
    "categories": "Smart Contract",
    "tags": "Smart Contract",
    "date": "2023-04-13 09:00:00 +0900",
    





    
    "snippet": "SASEUL Smart ContractThe SASEUL engine provides one system contract and one base method (Genesis) by default. Methods included in the system contract can only be executed by the Genesis address.Cre...",
    "content": "SASEUL Smart ContractThe SASEUL engine provides one system contract and one base method (Genesis) by default. Methods included in the system contract can only be executed by the Genesis address.Create the system contract by using the “Register” method in the “Genesis” method and creating other system methods with the “Register” method. Then, create a “Publish” method to allow network participants to deploy custom contracts and methods. Participants can then register and use the methods they need in the blockchain network using the “Publish” method.However, this approach is too complex and difficult to understand. We anticipate that someone will fork the network and build a new network after the SASEUL main network is made public. Therefore, we have created six base execution methods and 15 base query methods for the SASEUL main network.Each method is as follows:Base execution methods  Genesis: Method for generating the first block  Register: Method for registering contracts and methods  Grant: Method for creating network operators. Accepting this transaction will hard fork the network.  Revoke: Method for deleting network operators. If you want to modify the network again, you must hard fork it.  Oracle: Method for verifying the first mining and contribution ratio of Resource Chain.  Fee: Method for executing feesBase query methods  GetBlock: Method for querying a block  ListBlock: Method for listing blocks  BlockCount: Method for counting blocks  GetTransaction: Method for querying a transaction  ListTransaction: Method for listing transactions  TransactionCount: Method for counting transactions  GetCode: Method for querying methods  GetResourceBlock: Method for querying a Resource block  ListResourceBlock: Method for listing Resource blocks  ResourceBlockCount: Method for counting Resource blocks  GetResource: Method for querying contributions(resource)Rules  Each contract can only modify the Status data allocated to the contract address.  Contracts cannot access the same Status data as other contracts.  Contracts can be modified by changing the version, but cannot be modified if the version is set to 0.  The maximum length of a Status key is 64 characters and the maximum length of Status data is 65,536 characters.  Large data is stored in the block data by being sent in a transaction, and the transaction hash is stored in the Status data for reference."
  },
  
  {
    "title": "Specification",
    "url": "/posts/06-specification/",
    "categories": "SASEUL JS",
    "tags": "sdk, javascript",
    "date": "2023-04-11 09:00:00 +0900",
    





    
    "snippet": "Quick Startnpm$ npm install saseulconst SASEUL = require('saseul');let key = SASEUL.Sign.keyPair();console.dir(key);... Browser...&lt;script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com...",
    "content": "Quick Startnpm$ npm install saseulconst SASEUL = require('saseul');let key = SASEUL.Sign.keyPair();console.dir(key);... Browser...&lt;script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js\"&gt;&lt;/script&gt;&lt;script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/tweetnacl/1.0.2/nacl.min.js\"&gt;&lt;/script&gt;&lt;script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/axios/1.3.5/axios.min.js\"&gt;&lt;/script&gt;&lt;script type=\"text/javascript\" src=\"saseul.min.js\"&gt;&lt;/script&gt;&lt;script type=\"text/javascript\"&gt;    let key = SASEUL.Sign.keyPair();    console.dir(key);&lt;/script&gt;...Generating Key pair, Address and SignatureSASEUL use ed25519, ripemd160, sha256 algorithm to make private key, public key, address.Ed25519 is used to generate key pairs.You can hash the public key generated by the ed25519 algorithm as follows to generate an address.  address = ID_HASH(public_key)  ID_HASH = SHORT_HASH + CHECKSUM  CHECKSHUM = SHA256(SHA256(SHORT_HASH)).SUBSTRING(0,4)  SHORT_HASH = RIPEMD160(SHA256(public_key))SASEUL.Sign.keyPairGenerate a key pair.let key = SASEUL.Sign.keyPair();console.dir(key);// result:{    \"private_key\": \"&lt;PRIVATE_KEY&gt;\",    \"public_key\": \"&lt;PUBLIC_KEY&gt;\",    \"address\": \"&lt;ADDRESS&gt;\"}SASEUL.Sign.privateKeyGenerate only a private key.let key = SASEUL.Sign.privateKey();console.dir(key);// result:&lt;PRIVATE_KEY&gt;SASEUL.Sign.publicKeyGenerate a public key from the private key.let key = SASEUL.Sign.publicKey(\"&lt;PRIVATE_KEY&gt;\");console.dir(key);// result:&lt;PUBLIC_KEY&gt;SASEUL.Sign.addressGenerate an address from the public key.let address = SASEUL.Sign.address(\"&lt;PUBLIC_KEY&gt;\");console.dir(address);// result:&lt;ADDRESS&gt;SASEUL.Sign.addressValidityReturn the validity of the address.let validity = SASEUL.Sign.addressValidity(\"&lt;ADDRESS&gt;\");console.dir(validity);// result:    true or falseSASEUL.Sign.signatureGenerate a signature from contents and private Key.The data type of ‘' can be any type.let signature = SASEUL.Sign.signature(&lt;CONTENTS&gt;, \"&lt;PRIVATE_KEY&gt;\");console.dir(signature);// result:&lt;SIGNATURE&gt;SASEUL.Sign.signatureValidityReturn the validity of the signature.let validity = SASEUL.Sign.signatureValidity(&lt;CONTENTS&gt;, \"&lt;PUBLIC_KEY&gt;\", \"&lt;SIGNATURE&gt;\"),console.dir(validity);// result:    true or falseSASEUL.Sign.keyValidityReturn the validity of the key.let validity = SASEUL.Sign.keyValidity(\"&lt;PRIVATE_KEY OR PUBLIC_KEY&gt;\"),console.dir(validity);// result:    true or falseCreating and Sending Transactions and RequestsWhen a transaction is sent to the network, the network processes the transaction with the contract code and returns the result.When a request is sent to the network, the network queries the current state data and returns the result.SASEUL.Rpc.endpointSet the endpoint for sending transactions and requests to a node.SASEUL.Rpc.endpoint('&lt;ENDPOINT&gt;');SASEUL.Rpc.trackerReturn the tracker information of the node.SASEUL.Rpc.endpoint('&lt;ENDPOINT&gt;');SASEUL.Rpc.tracker().then(function (r) { console.dir(r); });// result:{  \"code\": 200,  \"data\": {    \"peers\": {        ...    },    \"known_hosts\": [        ...    ]  }}SASEUL.Rpc.peerReturn the peer information of the node.SASEUL.Rpc.endpoint('&lt;ENDPOINT&gt;');SASEUL.Rpc.peer().then(function (r) { console.dir(r); });// result:[    {        \"host\": \"&lt;ENDPOINT&gt;\",        \"address\": \"&lt;PEER_ADDRESS&gt;\"    },    ...]SASEUL.Rpc.pingCheck if the node is alive.SASEUL.Rpc.endpoint('&lt;ENDPOINT&gt;');SASEUL.Rpc.ping().then(function (r) { console.dir(r); });// result:{    \"code\": 200,    \"data\": \"ok\"}SASEUL.Rpc.roundReturn the current chain status of the node.SASEUL.Rpc.endpoint('&lt;ENDPOINT&gt;');SASEUL.Rpc.round().then(function (r) { console.dir(r); });// result:{  \"code\": 200,  \"data\": {    \"main\": {        ...    },    \"resource\": {        ...    }  }}SASEUL.Rpc.signedRequestCreate a signed request from data and a private key.SASEUL.Rpc.endpoint('&lt;ENDPOINT&gt;');let obj = SASEUL.Rpc.signedRequest({\"type\":\"GetBalance\",\"address\":\"&lt;ADDRESS&gt;\"}, SASEUL.Sign.privateKey());console.dir(obj);// result:{    \"request\": {        \"type\": \"GetBalance\",        ...    },    \"public_key\": \"...\",    \"signature\": \"...\"}SASEUL.Rpc.signedTransactionCreate a signed transaction from data and a private key.SASEUL.Rpc.endpoint('&lt;ENDPOINT&gt;');let obj = SASEUL.Rpc.signedTransaction({\"type\":\"Send\",\"to\":\"&lt;ADDRESS&gt;\",\"amount\":\"1\"}, SASEUL.Sign.privateKey());console.dir(obj);// result:{    \"transaction\": {        \"type\": \"Send\",        ...    },    \"public_key\": \"...\",    \"signature\": \"...\"}SASEUL.Rpc.requestSend a signed request to the node and return the result.SASEUL.Rpc.endpoint('&lt;ENDPOINT&gt;');let obj = SASEUL.Rpc.signedRequest({\"type\":\"GetBalance\",\"address\":\"&lt;ADDRESS&gt;\"}, SASEUL.Sign.privateKey());SASEUL.Rpc.request(obj).then(function (r) { console.dir(r); });// result:{    \"code\": 200,    \"data\": {        \"balance\": \"...\"    }}SASEUL.Rpc.sendTransactionSend a signed transaction to the node and return the result.SASEUL.Rpc.endpoint('&lt;ENDPOINT&gt;');let obj = SASEUL.Rpc.signedTransaction({\"type\":\"Send\",\"to\":\"&lt;ADDRESS&gt;\",\"amount\":\"1\"}, SASEUL.Sign.privateKey());SASEUL.Rpc.sendTransaction(obj).then(function (r) { console.dir(r); });// result:{    \"code\": 200,    \"data\": ...}SASEUL.Rpc.broadcastTransactionBroadcast a signed transaction and return the result. The number of times the transaction is broadcast depends on the number of peers of the node.SASEUL.Rpc.endpoint('&lt;ENDPOINT&gt;');let obj = SASEUL.Rpc.signedTransaction({\"type\":\"Send\",\"to\":\"&lt;ADDRESS&gt;\",\"amount\":\"1\"}, SASEUL.Sign.privateKey());SASEUL.Rpc.broadcastTransaction(obj).then(function (r) { console.dir(r); });// result:{    \"code\": 200,    \"data\": ...}SASEUL.Rpc.estimatedFeeEstimate the transaction fee. It returns an accurate fee only for valid transaction.SASEUL.Rpc.endpoint('&lt;ENDPOINT&gt;');let obj = SASEUL.Rpc.signedTransaction({\"type\":\"Send\",\"to\":\"&lt;ADDRESS&gt;\",\"amount\":\"1\"}, SASEUL.Sign.privateKey());SASEUL.Rpc.estimatedFee(obj).then(function (r) { console.dir(r); });// result:738000000000Utility functionsThese are functions that may be necessary during the process of data processing based on the SASEUL network.SASEUL.Util.timeReturn the current time in seconds.let result = SASEUL.Util.time();console.dir(result);// result:1681660939SASEUL.Util.utimeReturn the current time in microseconds.let result = SASEUL.Util.utime();console.dir(result);// result:1681660939642000SASEUL.Util.randomHexStringGenerate a random hexadecimal string of a given length.let result = SASEUL.Util.randomHexString(16);console.dir(result);// result:0e1e2770405d168a4fe246fd6469e9daSASEUL.Util.hexToByteConvert a hexadecimal string to a byte array.let result = SASEUL.Util.hexToByte(\"0e1e2770405d168a4fe246fd6469e9da\");console.dir(result);// result:{...}SASEUL.Util.byteToHexConvert a byte array to a hexadecimal string.let result = SASEUL.Util.byteToHex([...]);console.dir(result);// result:4d8ba12d63613dda822a69bc5ac1c589SASEUL.Util.stringToByteConvert a regular string to a byte array.let result = SASEUL.Util.stringToByte(\"Lorem ipsum\");console.dir(result);// result:{...}SASEUL.Util.stringToUnicodeConvert a regular string to a Unicode string.let result = SASEUL.Util.stringToUnicode(\"다람쥐헌쳇바퀴에타고파\");console.dir(result);// result:\\\\ub2e4\\\\ub78c\\\\uc950\\\\ud5cc\\\\uccc7\\\\ubc14\\\\ud034\\\\uc5d0\\\\ud0c0\\\\uace0\\\\ud30cSASEUL.Enc.stringConvert a given value to a string.let result = SASEUL.Enc.string({});console.dir(result);// result:\"{}\"SASEUL.Enc.hashConvert a given value to a SHA-256 hash. It must return a 64-character string.let result = SASEUL.Enc.hash({});console.dir(result);// result:44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8aSASEUL.Enc.shortHashConvert a given value to a SHA-256 hash and then to a RIPEMP160 hash. It must return a 40-character string.let result = SASEUL.Enc.shortHash({});console.dir(result);// result:62b7341d7271ea3b5ad12011a9467d8ba2736623SASEUL.Enc.checksumGenerate a checksum of a given value. It must return a 4-character string.let result = SASEUL.Enc.checksum(\"62b7341d7271ea3b5ad12011a9467d8ba2736623\");console.dir(result);// result:be3bSASEUL.Enc.hextimeConvert a time in microseconds to a hexadecimal time. It must return a 14-character string.let result = SASEUL.Enc.hextime(1681133629023000);console.dir(result);// result:05f8fb6cc72318SASEUL.Enc.timeHashCalculate the time hash from a given value and the time in microseconds. It must return a 78-character string.let result = SASEUL.Enc.timeHash({}, 1681133629023000);console.dir(result);// result:05f8fb6cc7231844136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8aSASEUL.Enc.timeHashValidityReturn the validity of the time hash.let result = SASEUL.Enc.timeHashValidity(\"05f8fb6cc7231844136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a\");console.dir(result);// result:    true or falseSASEUL.Enc.idHashCalculate the address hash from a given value. It must return a 44-character string.let result = SASEUL.Enc.idHash({});console.dir(result);// result:62b7341d7271ea3b5ad12011a9467d8ba2736623be3bSASEUL.Enc.idHashValidityReturn the validity of the address hash.let result = SASEUL.Enc.idHashValidity(\"62b7341d7271ea3b5ad12011a9467d8ba2736623be3b\");console.dir(result);// result:    true or falseSASEUL.Enc.cidCalculate the logical space value where a smart contract will be located from the address hash and an arbitrary string. It must return a 64-character string.let result = SASEUL.Enc.cid(\"62b7341d7271ea3b5ad12011a9467d8ba2736623be3b\", \"Lorem ipsum\");console.dir(result);// result:d744acf8717720d74c0b0ab4855c55653556152362c4be123b3fbeb4102ac9c1SASEUL.Enc.txHashCalculate the transaction hash from a given data. It must return a 78-character string.let result = SASEUL.Enc.txHash({\"type\":\"Send\",\"timestamp\":1681133629023000});console.dir(result);// result:05f8fb6cc72318a9fc84110f7de17f7749d414e559a68751ccde7ce76f5f0634dac05cbb3e159bSASEUL.Enc.isHexCheck if a given value is a hexadecimal string.let result = SASEUL.Enc.isHex(\"62b7341d7271ea3b5ad12011a9467d8ba2736623\");console.dir(result);// result:    true or falseCreate and register smart contractsThe contract language of the SASEUL engine is designed to be similar to functional programming languages. As coding according to this syntax can be very difficult, we provide tools to allow coding contracts in JavaScript.However, this page only provides a simple specification, and for detailed contract writing methods, please refer to the following documentation.Link: Smart Contract: Operator  Note: These functions do not work in a browser environment.SASEUL.SmartContract.OperatorReturns operator tools. For detailed information, please refer to the referenced documentation.const SASEUL = require('saseul');let op = SASEUL.SmartContract.Operator;let from = op.load_param('from');let amount = op.load_param('amount');let token_id = op.load_param('token_id');let from_balance = op.read_universal(token_id, from, '0');let condition = op.gte(from_balance, amount);let err_msg = 'err_msg ';let execution = op.condition(condition, err_msg);console.dir(execution);// result'{\"$condition\":[{\"$gte\":[{\"$read_universal\":[{\"$load_param\":[\"token_id\"]}, ... }'SASEUL.SmartContract.MethodCreates a method object. For detailed information, please refer to the referenced documentation.const SASEUL = require('saseul');let method = new SASEUL.SmartContract.Method({    \"type\": \"contract\",    \"name\": \"Send\",    \"version\": \"1\",    \"space\": '&lt;SPACE&gt;',    \"writer\": '&lt;ADDRESS&gt;',});method.addParameter({    \"name\": \"token_id\",     \"type\": \"string\", \"maxlength\": SASEUL.Enc.HASH_SIZE, \"requirements\": true});method.addParameter({    \"name\": \"to\",    \"type\": \"string\", \"maxlength\": SASEUL.Enc.ID_HASH_SIZE, \"requirements\": true});method.addParameter({    \"name\": \"amount\",    \"type\": \"string\", \"maxlength\": 40, \"requirements\": true});...console.dir(method.compile());// result'{\"t\":\"contract\",\"m\":\"0.2.0\",\"n\":\"Send\",\"v\":\"1\",\"s\":\"&lt;SPACE&gt;\",\"w\":\"\",\"p\":{\"token_id\": ... }'SASEUL.SmartContract.ContractCreates a contract object. For detailed information, please refer to the referenced documentation.const SASEUL = require('saseul');SASEUL.Rpc.endpoint('&lt;ENDPOINT&gt;');let contract = new SASEUL.SmartContract.Contract(\"&lt;ADDRESS&gt;\", \"&lt;SPACE_NONCE&gt;\");contract.addMethod(&lt;METHOD1&gt;);contract.addMethod(&lt;METHOD2&gt;);contract.addMethod(...);contract.publish(private_key);// resultTransaction added: ......Success! ..."
  },
  
  {
    "title": "Overview",
    "url": "/posts/05-overview/",
    "categories": "SASEUL JS",
    "tags": "sdk, javascript",
    "date": "2023-04-10 09:00:00 +0900",
    





    
    "snippet": "SaseulJSSaseulJS is a toolkit for developing decentralized applications based on the SASEUL blockchain engine.You can use this toolkit to create and send transactions and requests to the SASEUL net...",
    "content": "SaseulJSSaseulJS is a toolkit for developing decentralized applications based on the SASEUL blockchain engine.You can use this toolkit to create and send transactions and requests to the SASEUL network.You can also create and register smart contracts that operate on the SASEUL network.If you need information about SASEUL, you can refer to the link below.  SASEUL Website: https://saseul.com  Guardee Wallet: https://applink.guardee.io/  Block Explorer: https://explorer.saseul.com/If you want to install the SASEUL engine, you can refer to the link below.Dependencies  CryptoJS  tweetnacl  axiosInstallationYou can install saseul-js via a package manager:NPM:$ npm install saseul…or you can also use it as follows.Browser:&lt;script type=\"text/javascript\" src=\"saseul.min.js\"&gt;&lt;/script&gt;Quick StartNPM:$ npm install saseulconst SASEUL = require('saseul');SASEUL.Rpc.endpoint('&lt;YOUR NODE ENDPOINT&gt;'); // ex) blanc.saseul.net// Create a wallet address.let private_key = SASEUL.Sign.privateKey();let public_key = SASEUL.Sign.publicKey('cd654a234b59a64c20781243d161f8b40b9e87d4ea2be1904e66497e22ccefa9');let address = SASEUL.Sign.address('107acd459a0522abc4bab6719e30622bd9e08a9a54cd75dd76ce3f5f9dae846d');// Create a balance inquiry request and check the result.let get_balance = SASEUL.Rpc.signedRequest({\"type\":\"GetBalance\",\"address\":address}, private_key);SASEUL.Rpc.request(get_balance).then(function (r) { console.dir(r); });// Create a transaction for sending SL and broadcast it.let send = SASEUL.Rpc.signedTransaction({\"type\":\"Send\",\"to\":\"&lt;address&gt;\",\"amount\":\"&lt;amount&gt;\"}, private_key);SASEUL.Rpc.broadcastTransaction(send).then(function (r) { console.dir(r); });Browser:...&lt;div id=\"contents\"&gt;&lt;/div&gt;&lt;script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js\"&gt;&lt;/script&gt;&lt;script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/tweetnacl/1.0.2/nacl.min.js\"&gt;&lt;/script&gt;&lt;script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/axios/1.3.5/axios.min.js\"&gt;&lt;/script&gt;&lt;script type=\"text/javascript\" src=\"saseul.min.js\"&gt;&lt;/script&gt;&lt;script type=\"text/javascript\"&gt;    let contents = document.getElementById('contents');        SASEUL.Rpc.endpoint('&lt;YOUR NODE ENDPOINT&gt;'); // ex) blanc.saseul.net    // Create a wallet address.    let private_key = SASEUL.Sign.privateKey();    let public_key = SASEUL.Sign.publicKey('cd654a234b59a64c20781243d161f8b40b9e87d4ea2be1904e66497e22ccefa9');    let address = SASEUL.Sign.address('107acd459a0522abc4bab6719e30622bd9e08a9a54cd75dd76ce3f5f9dae846d');        contents.innerHTML+= \"&lt;div&gt;Private Key: \" + private_key + \"&lt;/div&gt;\";    contents.innerHTML+= \"&lt;div&gt;Public Key: \" + public_key + \"&lt;/div&gt;\";    contents.innerHTML+= \"&lt;div&gt;Address: \" + address + \"&lt;/div&gt;\";    // Create a balance inquiry request and check the result.    let get_balance = SASEUL.Rpc.signedRequest({\"type\":\"GetBalance\",\"address\":address}, private_key);    SASEUL.Rpc.request(get_balance)            .then(function (r) { contents.innerHTML+= \"&lt;div&gt;Get Balance: \" + JSON.stringify(r, null, 2) + \"&lt;/div&gt;\"; })            .catch(function (e) { contents.innerHTML+= \"&lt;div&gt;Get Balance: \" + JSON.stringify(e, null, 2) + \"&lt;/div&gt;\"; });    // Create a transaction for sending SL and broadcast it.    let send = SASEUL.Rpc.signedTransaction({\"type\":\"Send\",\"to\":\"&lt;address&gt;\",\"amount\":\"&lt;amount&gt;\"}, private_key);    SASEUL.Rpc.broadcastTransaction(send)            .then(function (r) { contents.innerHTML+= \"&lt;div&gt;Get Balance: \" + JSON.stringify(r, null, 2) + \"&lt;/div&gt;\"; })            .catch(function (e) { contents.innerHTML+= \"&lt;div&gt;Send: \" + JSON.stringify(e, null, 2) + \"&lt;/div&gt;\"; });&lt;/script&gt;..."
  },
  
  {
    "title": "RPC API",
    "url": "/posts/04-rpc-api/",
    "categories": "Node",
    "tags": "node",
    "date": "2023-04-07 09:00:00 +0900",
    





    
    "snippet": "Getting StartedYou can access the SASEUL node with HTTP or HTTPS and use RPC in the GET or POST method.In case of GET method, provide request parameters in query string.  URL: {host}/{RPC_API_NAME}...",
    "content": "Getting StartedYou can access the SASEUL node with HTTP or HTTPS and use RPC in the GET or POST method.In case of GET method, provide request parameters in query string.  URL: {host}/{RPC_API_NAME}?{request parameters}In case of POST method, provide request parameters in form-data with key-value format.  URL: {host}/{RPC_API_NAME}  Body: {request parameters}Basic OperationPing  URL: {host}/pingCheck that the SASEUL node is active.Return Value{    \"code\": 200,    \"data\": []}Info  URL: {host}/infoGet the SASEUL node’s process status and the latest main and resource block information.Return Value{  \"code\": 200,  \"data\": {    \"chain_maker_policy\": true,    \"resource_miner_policy\": true,    \"peer_searcher_policy\": true,    \"collector_policy\": true,    \"mining\": false,    \"last_block\": {      ...    },    \"last_resource_block\": {      ...    }  }}Tracker OperationPeer  URL: {host}/peerGet the list of nodes on the network that are associated with the SASEUL node.Request Parameters            Parameter      Requirements      Type      Maxlength      Description                  register      optional      Boolean(int)             Determines whether to send a request to the target node to register itself.              host      optional      String             If the ‘register’ variable is true, enter the host variable to register.              authentication      optional      Boolean(int)             Requests the network information of the target node.              height      optional      Int             If the ‘authentication’ variable is true, add the verification block number to be registered.      Return value{    \"code\": 200,    \"data\": {        \"peers\": {            ...        },        \"known_hosts\": [            ...        ],        \"node\": {            ...        }    },    \"register\": true,    \"registerResult\": true,    \"authentication\": true}Round OperationRound  URL: {host}/roundGet information of a specific block height.Request Parameters            Parameter      Requirements      Type      Maxlength      Description                  chain_type      optional      String             main              height      optional      int             height of recent block      Return value{    \"code\": 200,    \"data\": {        \"block\": {            ...        },    \"sync_limit\": 40362,    \"timestamp\": 1656048496844843    }}Broadcast  URL: {host}/broadcastGet consensus information of the current round.Request Parameters            Parameter      Requirements      Type      Maxlength      Description                  chain_type      optional      String             main              round_key      optional      String             block_hash(latest)      Return value{    \"code\": 200,    \"data\": {        \"transactions\": {            ...        },        \"chunks\": {            ...        },        \"hypotheses\": {            ...        }    }}Smart Contracts and RequestsRequest  Execute the method of a smart contract based on data stored in the current node, and display the informationRequest Parameters            Parameter      Requirements      Type      Maxlength      Description                  request      mandatory      String             {“type”:”\",  ...}              public_key      optional      String             ””              signature      optional      String             ””      Examplecurl -X POST main.saseul.net/request --data 'request={\"type\":\"GetBalance\",\"address\":\"&lt;address&gt;\"}'RawRequest  Execute the method of a smart contract based on data stored in the current node, and display the information  Execute a registered reqeust code with raw data.Request Parameter            Parameter      Requirements      Type      Maxlength      Description                  body      mandatory      Object             {“request”:{“type”:”\",  ...}, \"public_key\":...}      Examplecurl -X POST main.saseul.net/rawrequest --data '{\"request\":{\"type\":\"GetBalance\",\"address\":\"&lt;address&gt;\"}}'SendTransaction  Execute the method of the smart contract to create a transaction and broadcast it.Request Parameters            Parameter      Requirements      Type      Maxlength      Description                  transaction      mandatory      String             {“type”:”\",  ...}              public_key      optional      String             ””              signature      optional      String             ””      Examplecurl -X POST main.saseul.net/sendtransaction --data \\'transaction={\"type\":\"Send\",\"to\":\"&lt;address&gt;\",\"amount\":\"&lt;amount&gt;\"}&amp;public_key=&lt;public_key&gt;&amp;signature=&lt;signature&gt;'SendRawTransaction  Execute the method of the smart contract to create a transaction and broadcast it.  Execute a registered contract code with raw data.Request Parameters            Parameter      Requirements      Type      Maxlength      Description                  body      mandatory      String             {“transaction”:{“type”:”\",  ...}, \"public_key\":...}      Examplecurl -X POST main.saseul.net/sendrawtransaction --data \\'{\"transaction\":{\"type\":\"Send\",\"to\":\"&lt;address&gt;\",\"amount\":\"&lt;amount&gt;\"},\"public_key\":\"&lt;public_key&gt;\",\"signature\":\"&lt;signature&gt;\"}'"
  },
  
  {
    "title": "Command Line Interface",
    "url": "/posts/03-command-line-interface/",
    "categories": "Node",
    "tags": "node",
    "date": "2023-04-06 09:00:00 +0900",
    





    
    "snippet": "Getting StartedOnce SASEUL is installed on your node machine, the node is now ready to run. You can execute various predefined SASEUL commands on cli to directly operate your SASEUL node.You can ex...",
    "content": "Getting StartedOnce SASEUL is installed on your node machine, the node is now ready to run. You can execute various predefined SASEUL commands on cli to directly operate your SASEUL node.You can execute SASEUL commands like below.  For docker installed nodes,    docker exec -i saseul-node saseul-script {commandName}        For source code installed nodes, move to the path below.    cd &lt;Path to source code&gt;./src/saseul-script      Basic OperationLog  Display debug logs  Usage:  $ saseul-script Log   $ saseul-script Log –count 10            Option      Type      Description                  -n –count      int (count)      Number of lines of logs to output (0: all)              -c –clear             Clears all logs.              -f –follow             Output appended logs as the file grows              -h –help             help      Start  Start the node.  However, mining does not start automatically.  Usage:  $ saseul-script StartStop  Stop the node.  If the stop command fails, the process will be killed.  Usage:  $ saseul-script StopRestart  Restart the node.  Execute the Start command followed by the Stop command in sequence.  Usage:  $ saseul-script RestartKill  Kill all running processes.  Usage:  $ saseul-script KillStartMining  Starts the mining process.  It only works when the saseul process is running.  Usage:  $ saseul-script StartMiningStopMining  Stops the mining process.  It only works when the saseul process is running.  Usage:  $ saseul-script StopMiningInfo  Display current status information of the node.  Usage:  $ saseul-script InfoSetup OperationSetEnv  Set the env information of the node.  You can configure node information, peer information, miner address, and node endpoint.  Usage:  $ saseul-script SetEnv   $ saseul-script SetEnv –miner &lt;address&gt;            Option      Type      Description                  -a –all             Set all env information.              -n –node      string       Set node key              -p –peer      string       Set peer key              -m –miner      string &lt;address&gt;      Set miner address              -e –endpoint      string       Set endpoint (“”: reset)              -h –help             help      GetEnv  Display all env information of the node.  You can check the node information, peer information, miner address, and node endpoint.  Usage:  $ saseul-script SetEnv   $ saseul-script SetEnv –miner &lt;address&gt;            Option      Type      Description                  -a –all             Display all information              -n –node      (null, private_key, public_key, address)      Display node information              -p –peer      (null, private_key, public_key, address)      Display peer information              -m –miner             Display miner address              -e –endpoint             Display endpoint              -h –help             help      Tracker OperationAddTracker  Adding a tracker to the peer-to-peer search algorithm.  If the node is running, peers will typically connect within about 2-3 minutes on average.  Usage:  $ saseul-script AddTracker –peer ResetTracker  Deletes all tracker information.  The peer information is reset to main.saseul.net, aroma.saseul.net, and blanc.saseul.net.  Usage:  $ saseul-script ResetTrackerPeer  Display peer information.  Peers containing the node’s data are connected as “Peer”  Peers not containing the node’s data are connected as “Known Hosts”  Unreachable peers are not displayed.  Usage:  $ saseul-script PeerData OperationReset  Delete all data.  Tracker data and environment information data will not be deleted.  Usage:  $ saseul-script ResetForceSync  Synchronize blocks quickly from a specific peer.  The data consistency check is performed after synchronization, so if a malicious node synchronizes, the node can be forked from the network.  Usage:  $ saseul-script ForceSync –peer RestoreBlock  Delete some of the latest blocks and resynchronize.  Deletes the specified number of Resource Blocks and also the Main Blocks recorded in the Resource Blocks.  This is a feature used to recover block data in case the network is forked.  Usage:  $ saseul-script RestoreBlock –count RewindBlock  Delete unfinalized resource blocks and resynchronize.  This is a function used when there is an error in the consistency of the latest block data.  Usage:  $ saseul-script RewindBlock –count Rebundling  Recomputes the status data based on block information.  This is a function used when there is an error in the consistency of the latest block data.  Usage:  $ saseul-script RebundlingSmart Contracts and RequestsSendTransaction  Execute the method of the smart contract to create a transaction and broadcast it.  Usage:  $ saseul-script SendTransaction   $ saseul-script SendTransaction –method Send –data ‘{“to”:”&lt;address&gt;”,”amount”:”1000000”}’            Option      Type      Description                  -c –cid      string       Enter the contract ID to call.              -m –method      string       Enter the name of the method to be called.              -k –key      string       Enter the private key to sign the transaction (Optional)              -d –data      string       Enter transaction data (JSON Format)              -h –help             help      LocalRequest  Execute the method of a smart contract based on data stored in the current node, and display the information  Usage:  $ saseul-script LocalRequest   $ saseul-script LocalRequest –method GetBalance –data ‘{“address”:”&lt;address&gt;”}’            Option      Type      Description                  -c –cid      string       Enter the contract ID to call.              -m –method      string       Enter the name of the method to be called.              -k –key      string       Enter the private key to sign the request (Optional)              -d –data      string       Enter request data (JSON Format)              -h –help             help      "
  },
  
  {
    "title": "Installation",
    "url": "/posts/02-installation/",
    "categories": "Node",
    "tags": "node",
    "date": "2023-04-04 09:00:00 +0900",
    





    
    "snippet": "Getting StartedSASEUL is a public blockchain network. Anyone who wants to join the network can establish one’s own SASEUL node. One canmine resources, host dApps, browse the whole network data and ...",
    "content": "Getting StartedSASEUL is a public blockchain network. Anyone who wants to join the network can establish one’s own SASEUL node. One canmine resources, host dApps, browse the whole network data and do various interesting things with the SASEUL node.SpecificationsMinimum specs  2 Core CPU  8 GB RAM  256 GB SSDRecommended  4 Core+ CPU  32 GB+ RAM  1 TB+ SSDPreparationPort fowarding &amp; Static IPThe SASEUL node uses 80 and 443 port of your router. You need to set your router to allow the SASEUL node instance touse these ports.  To see how to set the ports in AWS EC2, goto AWS EC2 Security group rulesInstall dockerSince the SASEUL main network is a minimal version that adopts some of the features of the SASEUL engine, even a light update can greatly change the source code. Therefore, for the convenience of operation, we have decided to provide nodes as Docker containers.  Please check the Docker official websitelink for instructions on how to install Docker.InstallationQuick Start  Install Docker on your PC or server.  Use the following command to download the latest version.     $ docker pull artifriends/saseul-network:latest $ docker run -d --init --name saseul-node -p 80:80 artifriends/saseul-network:latest     $ docker exec -i saseul-node saseul-script SetEnv ...     $ docker exec -i saseul-node saseul-install $ docker exec -i saseul-node saseul-script Start $ docker exec -i saseul-node saseul-script StartMining  $ docker exec -i saseul-node saseul-script Info        If you encounter any issues, run the following command.    $ docker exec -i saseul-node saseul-script Restart$ docker exec -i saseul-node saseul-script StartMining        If block data synchronization is too slow, run the following command.    $ docker exec -i saseul-node saseul-script Stop$ docker exec -i saseul-node saseul-script Reset   ... reset ...   $ docker exec -i saseul-node saseul-script ForceSync --peer main.saseul.net$ docker exec -i saseul-node saseul-script Start$ docker exec -i saseul-node saseul-script Log      If you want to change the folder to store block data  If you follow this procedure, you will not have to synchronize every time you patch.$ docker pull artifriends/saseul-network:latest$ mkdir &lt;Path to folder&gt; # ex) mkdir /var/saseul-data$ chown -Rf &lt;user:group&gt; &lt;Path to folder&gt; # ex) chown -Rf ec2-user:ec2-user /var/saseul-data$ docker run -d --init --name saseul-node -p 80:80 \\-v /var/saseul-data:/var/saseul/saseul-network/data artifriends/saseul-network:latest    ... The remaining procedures are the same as above. ...Backup node information.$ docker exec -i saseul-node saseul-script GetEnv --all... The displayed node environment information ..."
  },
  
  {
    "title": "Overview",
    "url": "/posts/01-overview/",
    "categories": "Node",
    "tags": "node",
    "date": "2023-04-03 09:00:00 +0900",
    





    
    "snippet": "SASEULSASEUL is an engine for building blockchain networks.SASEUL Public Main Network is a network built with minimal features provided by the SASEUL engine.For using the full engine for purposes s...",
    "content": "SASEULSASEUL is an engine for building blockchain networks.SASEUL Public Main Network is a network built with minimal features provided by the SASEUL engine.For using the full engine for purposes such as enterprise or hyper-connected computing and opening a protocol for untraceable anonymous networks beyond the public features, please contactArtiFriends Inc.  Telegram: Telegram Q&amp;A Link  Kakaotalk: Kakaotalk Q&amp;A LinkQuick Start  Install Docker on your PC or server.  Use the following command to download the latest version.     $ docker pull artifriends/saseul-network:latest $ docker run -d --init --name saseul-node -p 80:80 artifriends/saseul-network:latest $ docker exec -i saseul-node saseul-script SetEnv ...     $ docker exec -i saseul-node saseul-install $ docker exec -i saseul-node saseul-script Start $ docker exec -i saseul-node saseul-script StartMining  $ docker exec -i saseul-node saseul-script Info        If you encounter any issues, run the following command.    $ docker exec -i saseul-node saseul-script Restart$ docker exec -i saseul-node saseul-script StartMining        If block data synchronization is too slow, run the following command.    $ docker exec -i saseul-node saseul-script Stop$ docker exec -i saseul-node saseul-script Reset   ... reset ...   $ docker exec -i saseul-node saseul-script ForceSync --peer main.saseul.net$ docker exec -i saseul-node saseul-script Start$ docker exec -i saseul-node saseul-script Log      AlgorithmsThe SASEUL engine performs the following functions:  Processes transactions according to registered contract code.  Generates block and status data according to predefined rules.  Collects data stored by peers.In addition, the SASEUL main network operates according to the following rules:  Network participants create Resource Chains according to the PoW algorithm. Miners are selected as validators for the Main Chain.  Validators create the Main Chain according to the HAP-2 algorithm.  The consensus priority is given to the Resource Chain over the Main Chain.We have utilized the principle of operating multiple chains simultaneously to overcome many of the limitations of traditional blockchain technology.Furthermore, we have developed a perfectly decentralized blockchain network with fast speed and scalability.Main ChainThe Main Chain is the chain where transactions in the SASEUL network are stored. Data is confirmed by the HAP-2 algorithm and validator nodes. All transactions must be the result of methods defined in the contract.Resource ChainThe Resource Chain is the chain that determines the validator nodes in the SASEUL network. Block data is generated by the PoW algorithm, but there is no special reward even if mining is successful.MiningThe process of using computing power to find a Resource Block and be selected as a validator node is called Mining. It provides an opportunity to contribute to the network, and once the role of the validator is fully performed, a Resource can be obtained.ResourceIt represents the extent of contribution to the network. When one Resource Block is created, the Resource Block confirmed 10 blocks or 10 minutes before is considered. The contribution of the confirmed block is settled in the process of the next validator creating the Main Chain. The contribution of one Resource Block created is 2000 * 10^18 and is divided by the number of people who contributed to the creation of the Main Chain.TransactionIt is the smallest unit of data that can make changes to the network. It must be defined as a Method in the Contract and wrote in the Main Chain.RequestIt is a request for a simple query without making changes to the network. It must be defined as a Method in the Contract and retrieves each data in the Main Chain.Local StatusIt is the state data that all nodes in the network must store. If the capacity of this data increases, the network may experience an increase in load. Contract code is stored in this form.Universal StatusIt is the state data that is stored in a distributed manner in the network. Data such as balances are stored in this form."
  }
  
]

